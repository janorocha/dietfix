{"ast":null,"code":"import _defineProperty from \"/home/jano/Documentos/Nutri/crud/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/jano/Documentos/Nutri/crud/frontend/src/components/user/UserCrud.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Main from '../template/Main';\nconst headerProps = {\n  icon: 'users',\n  title: 'Pacientes',\n  subtitle: 'Cadastro de pacientes: Incluir, Listar, Alterar e Excluir'\n};\nconst baseUrl = 'http://localhost:3001/users';\nconst initialState = {\n  user: {\n    name: '',\n    email: ''\n  },\n  list: []\n};\nexport default class UserCrud extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = _objectSpread({}, initialState);\n  }\n\n  componentWillMount() {\n    axios(baseUrl);\n  }\n\n  clear() {\n    this.setState({\n      user: initialState.user\n    });\n  }\n\n  save() {\n    const user = this.state.user;\n    const method = user.id ? 'put' : 'post';\n    const url = user.id ? \"\".concat(baseUrl, \"/\").concat(user.id) : baseUrl;\n    axios[method](url, user).then(resp => {\n      const list = this.getUpdatedList(resp.data);\n      this.setState({\n        user: initialState.user,\n        list\n      });\n    });\n  }\n\n  getUpdatedList(user) {\n    const list = this.state.list.filter(u => u.id !== user.id);\n    list.unshift(user);\n    return list;\n  }\n\n  updateFild(event) {\n    const user = _objectSpread({}, this.state.user);\n\n    user[event.target.name] = event.target.value;\n    this.setState({\n      user\n    });\n  }\n\n  rederForm() {\n    return React.createElement(\"div\", {\n      className: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-12 col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Nome\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      name: \"name\",\n      value: this.state.user.name,\n      onChange: e => this.updateFild(e),\n      placeholder: \"Digite o nome...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"col-12 col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"E-mail\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      name: \"email\",\n      value: this.state.user.email,\n      onChange: e => this.updateFild(e),\n      placeholder: \"Digite o e-mail...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })))), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-12 d-flex justify-content-end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: e => this.save(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Salvar\"), React.createElement(\"button\", {\n      className: \"btn btn-secondary ml-2\",\n      onClick: e => this.clear(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Cancelar\"))));\n  }\n\n  render() {\n    console.log(this.state.list);\n    return React.createElement(Main, Object.assign({}, headerProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), this.rederForm());\n  }\n\n}","map":{"version":3,"sources":["/home/jano/Documentos/Nutri/crud/frontend/src/components/user/UserCrud.jsx"],"names":["React","Component","axios","Main","headerProps","icon","title","subtitle","baseUrl","initialState","user","name","email","list","UserCrud","state","componentWillMount","clear","setState","save","method","id","url","then","resp","getUpdatedList","data","filter","u","unshift","updateFild","event","target","value","rederForm","e","render","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios'\nimport Main from '../template/Main'\n\nconst headerProps = {\n    icon: 'users',\n    title: 'Pacientes',\n    subtitle: 'Cadastro de pacientes: Incluir, Listar, Alterar e Excluir'\n}\n\nconst baseUrl = 'http://localhost:3001/users'\nconst initialState = {\n    user: { name: '', email: '' },\n    list: []\n}\n\nexport default class UserCrud extends Component {\n    state = { ...initialState }\n\n    componentWillMount() {\n        axios(baseUrl)\n    }\n\n    clear() {\n        this.setState({ user: initialState.user })\n    }\n\n    save (){\n        const user = this.state.user\n        const method = user.id ? 'put' : 'post'\n        const url = user.id ? `${baseUrl}/${user.id}` : baseUrl\n        axios[method](url, user)\n            .then(resp => {\n                const list = this.getUpdatedList(resp.data)\n                this.setState({ user: initialState.user, list })\n            })\n    }\n\n    getUpdatedList(user) {\n        const list = this.state.list.filter(u => u.id !== user.id)\n        list.unshift(user)\n        return list\n    }\n\n    updateFild( event ) {\n        const user = {...this.state.user }\n        user[event.target.name] = event.target.value\n        this.setState({ user })\n    }\n\n    rederForm() {\n        return (\n            <div className=\"form\">\n                <div className=\"row\">\n                    <div className=\"col-12 col-md-6\">\n                        <div className=\"form-group\">\n                            <label>Nome</label>\n                            <input type=\"text\" className=\"form-control\"\n                            name=\"name\"\n                            value={this.state.user.name}\n                            onChange={e => this.updateFild(e)}\n                            placeholder=\"Digite o nome...\"/>\n                        </div>\n                    </div>\n                    <div className=\"col-12 col-md-6\">\n                        <div className=\"form-group\">\n                            <label>E-mail</label>\n                            <input type=\"text\" className=\"form-control\"\n                                name=\"email\"\n                                value={this.state.user.email}\n                                onChange={e => this.updateFild(e)}\n                                placeholder=\"Digite o e-mail...\" />\n                        </div>\n                    </div>\n                </div>\n\n                <hr />\n                <div className=\"row\">\n                    <div className=\"col-12 d-flex justify-content-end\">\n                        <button className=\"btn btn-primary\"\n                            onClick={e => this.save(e)}>\n                            Salvar\n                        </button>\n\n                        <button className=\"btn btn-secondary ml-2\"\n                            onClick={e => this.clear(e)}>\n                            Cancelar\n                        </button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    render() {\n        console.log(this.state.list)\n        return (\n            <Main {...headerProps}>\n                {this.rederForm()}\n            </Main>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}